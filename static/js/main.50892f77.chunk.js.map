{"version":3,"sources":["tree-sim.png","map-editor.PNG","dot.PNG","extant.png","troneline.PNG","App.js","serviceWorker.js","index.js"],"names":["module","exports","cardList","image","treeSim","link","title","mapEditor","dot","extant","troneline","dark","Card","i","className","key","href","src","alt","App","map","info","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,+OCQrCC,EAAS,CACb,CAACC,MAAMC,IACPC,KAAK,qCACLC,MAAM,mBAEN,CAACH,MAAMI,IACPF,KAAK,wCACLC,MAAM,cAEN,CAACH,MAAMK,IACPH,KAAK,iCACLC,MAAM,qBAEN,CAACH,MAAMM,IACPJ,KAAK,oCACLC,MAAM,UAEN,CAACH,MAAMO,IACLL,KAAK,uCACLC,MAAM,YACNK,MAAK,IAGLC,EAAO,SAACT,EAAME,EAAKC,EAAMK,EAAKE,GAEhC,OADAF,EAAMA,EAAK,QAAQ,GACZ,uBAAGG,UAAU,OAAOC,IAAKF,EAAEG,KAAMX,GACtC,yBAAKS,UAAW,SAAWH,GACzB,yBAAKM,IAAKd,EAAOe,IAAKZ,KAExB,yBAAKQ,UAAU,SAASR,KAwCba,MArCf,WACE,OACE,yBAAKL,UAAU,YACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,WACb,0CACA,iDACA,kDAGF,yBAAKA,UAAU,YACf,yBAAKA,UAAU,OAAf,iNAGA,yBAAKA,UAAU,OAAf,2JAGA,yBAAKA,UAAU,OAAf,+GAIA,yBAAKA,UAAU,SACf,uBAAGE,KAAK,8BAA6B,yBAAKF,UAAU,kBACpD,uBAAGE,KAAK,mCAAR,IAA2C,yBAAKF,UAAU,sBAG1D,yBAAKA,UAAU,SACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QAAQZ,EAASkB,IAAI,SAACC,EAAKR,GAAN,OAAUD,EAAKS,EAAKlB,MAAMkB,EAAKhB,KAAKgB,EAAKf,MAAMe,EAAKV,KAAKE,KAA7F,SCxDUS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.50892f77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tree-sim.dc93f903.png\";","module.exports = __webpack_public_path__ + \"static/media/map-editor.7f22a339.PNG\";","module.exports = __webpack_public_path__ + \"static/media/dot.85b57a71.PNG\";","module.exports = __webpack_public_path__ + \"static/media/extant.42e79f54.png\";","module.exports = __webpack_public_path__ + \"static/media/troneline.41aeeeab.PNG\";","import React from 'react';\r\nimport './App.css';\r\nimport treeSim from './tree-sim.png'\r\nimport mapEditor from './map-editor.PNG'\r\nimport dot from './dot.PNG'\r\nimport extant from './extant.png'\r\nimport troneline from './troneline.PNG'\r\n\r\nconst cardList=[\r\n  {image:treeSim,\r\n  link:\"https://github.com/Nydroam/TreeSim\",\r\n  title:\"Tree Simulation\",\r\n  },\r\n  {image:mapEditor,\r\n  link:\"https://github.com/Nydroam/map-editor\",\r\n  title:\"Map Editor\",\r\n  },\r\n  {image:dot,\r\n  link:\"https://github.com/Nydroam/Dot\",\r\n  title:\"Dot - Virtual Pet\",\r\n  },\r\n  {image:extant,\r\n  link:\"https://github.com/Nydroam/Extant\",\r\n  title:\"Extant\",\r\n  },\r\n  {image:troneline,\r\n    link:\"https://github.com/Nydroam/troneline\",\r\n    title:\"TRONELINE\",\r\n    dark:true,\r\n    }\r\n]\r\nvar Card = (image,link,title,dark,i) => {\r\n  dark= dark?\" dark\":\"\";\r\n  return <a className=\"card\" key={i}href={link}>\r\n    <div className={\"center\" + dark}>\r\n      <img src={image} alt={title}></img>\r\n    </div>\r\n    <div className=\"title\">{title}</div>\r\n  </a>\r\n}\r\nfunction App() {\r\n  return (\r\n    <div className=\"App flex\">\r\n        <div className=\"left\">\r\n        <div className=\"heading\">\r\n          <h2>Raymond Wu</h2>\r\n          <h5>Software Engineer</h5>\r\n          <h5>University Senior</h5>\r\n        </div>\r\n        \r\n        <div className=\"overflow\">\r\n        <div className=\"bio\">\r\n        Raymond Wu is a fledgling developer testing the waters of the software engineering field. He views code as a versatile tool, one that can smooth out bumps in daily life as well as paint new digital vistas. \r\n        </div>\r\n        <div className=\"bio\">\r\n        He has programmed general and web applications both at the university-level and professionally and is now actively looking for full-time opportunities.\r\n        </div>\r\n        <div className=\"bio\">\r\n        Raymond is a senior at Stony Brook University pursuing his Bachelor of Science in Computer Science Degree.\r\n        </div>\r\n        </div>\r\n        <div className=\"links\">\r\n        <a href=\"https://github.com/Nydroam\"><div className=\"fa fa-github\"></div></a>\r\n        <a href=\"https://linkedin.com/in/raywu17\"> <div className=\"fa fa-linkedin\"></div></a>\r\n        </div>\r\n        </div>\r\n        <div className=\"right\">\r\n        <div className=\"container\">\r\n          <div className=\"flex\">{cardList.map((info,i)=>Card(info.image,info.link,info.title,info.dark,i))} </div>\r\n      \r\n          \r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}